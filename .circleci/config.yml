version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.8.0


jobs:
    build_artifact:
      # Use prebuild docker container for node js
      docker:
        - image: circleci/node:12-browsers
      steps:
        # Checkout the code from the branch into the working_directory
        - checkout
        # Log the current branch
        - run:
            name: Show current branch
            command: echo ${CIRCLE_BRANCH}
        # Restore local dependencies from cache
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "package-lock.json" }}
              - v1-dependencies-
        # Install project dependencies
        - run:
            name: Install local dependencies
            command: |
              npm install -g @angular/cli --prefix=$HOME/.local
              npm ci
        # Lint the source code
        - run:
            name: Linting
            command: ng lint
        # Test the source code
        - run:
            name: Testing
            command: ng test --watch=false --browsers ChromeHeadless
        # Build production version of angular app
        - run:
            name: Build angular app
            command: ng build 
        # Gzip everything into one single artifact
        - run:
            name: Create artifacts
            command: tar -czf "dtapi_fe.tar.gz" -C ./dist/IF105/ .
        # Store the an artifact
        - store_artifacts:
            path: dtapi_fe.tar.gz
        # Cache local dependencies if they don't exist
        - save_cache:
            key: v1-dependencies-{{ checksum "package-lock.json" }}
            paths:
              - node_modules
        - persist_to_workspace:
            root: .
            paths:
              - "dist"
              - "docker"
    build_container:
      docker:
        - image: cimg/base:2020.01
      resource_class: small
      steps:
        - setup_remote_docker 
        - attach_workspace:
            at: ~/project/
        - gcp-gcr/gcr-auth
        # build and push Docker image
        - gcp-gcr/build-image:
            dockerfile: "docker/Dockerfile"
            image: dtapi-fe
            registry-url: eu.gcr.io
        - gcp-gcr/push-image:
            digest-path: /tmp/digest.txt
            image: dtapi-fe
            registry-url: eu.gcr.io
        # The path to save the RepoDigest of the pushed image
        - run:
            command: |
              echo "Digest is: $(</tmp/digest.txt)"

workflows:
  build:
    jobs:
      - build_artifact
      - build_container:
          context: dtapi
          requires:
            - build_artifact